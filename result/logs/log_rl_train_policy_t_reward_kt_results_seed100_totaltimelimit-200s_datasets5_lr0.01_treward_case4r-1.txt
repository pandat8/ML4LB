nohup: ignoring input
./result/saved_models/rl/reinforce/setcovering/checkpoint_trained_reward3_simplepolicy_rl4lb_reinforce_trainset_setcovering-small_lr0.01_epochs7.pth
t_reward_type:  reward_k+t
total_time_limit =  200
initial_node_time_limit =  10
learning rate =  0.01
epsilon =  0.0
miplib_39binary-small
firstsol
symmetric
seed: 100
cpu
5
Epoch 0
instance:  0
create a new SCIP model
original problem has 2728 variables (1364 bin, 0 int, 0 impl, 1364 cont) and 1442 constraints
The initial incumbent of miplib_39binary-2_transformed_aflow40b is successfully added to MIP model
Instance:  miplib_39binary-2_transformed_aflow40b
N of variables: 2728
N of binary vars: 1364
N of constraints: 1442
Initial obj before LB: 8410.0
binary support:  39
MIP copies are created
incumbent solution is copied to MIP copies
solution value 0 violates bounds of <t_t_x1053>[1,1] by 1
Traceback (most recent call last):
  File "train_reinforce4lb_t_policy.py", line 83, in <module>
    reinforce_localbranch.train_agent_policy_t(train_instance_size=instance_size,
  File "/home/liudefen/projects/ML4LocalBranch_extend/mllocalbranch_fromfiles.py", line 7553, in train_agent_policy_t
    index_instance, agent_k, agent_t, primal_integral, primal_gap_final = self.train_rl_policy_per_instance(
  File "/home/liudefen/projects/ML4LocalBranch_extend/mllocalbranch_fromfiles.py", line 7104, in train_rl_policy_per_instance
    status, obj_best, elapsed_time, lb_bits_pred_reset, times_pred_reset_, objs_pred_reset_, agent_k, agent_t = self.mdp_localbranch(
  File "/home/liudefen/projects/ML4LocalBranch_extend/mllocalbranch_fromfiles.py", line 6877, in mdp_localbranch
    state, reward_k, reward_time , done, _ = localbranch.step_localbranch(k_action=k_action, t_action=t_action, lb_bits=lb_bits)
  File "/home/liudefen/projects/ML4LocalBranch_extend/localbranching.py", line 204, in step_localbranch
    assert feasible, "Error: the best solution from current SCIP subMIP solving is not feasible!"
AssertionError: Error: the best solution from current SCIP subMIP solving is not feasible!
